name: test

on:
  push:
    branches:
      - main
      - "[0-9]+.[0-9]+.x"
      - "test-me-*"
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
      - "[0-9]+.[0-9]+.[0-9]+rc[0-9]+"

  pull_request:
    branches:
      - main
      - "[0-9]+.[0-9]+.x"
    types:
      - opened  # default
      - synchronize  # default
      - reopened  # default
      - ready_for_review  # used in PRs created from the release workflow

env:
  PYTEST_ADDOPTS: "--color=yes"

# Cancel running jobs for the same workflow and branch.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


permissions:
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.12"
          - "3.13"

    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.7.16"
          python-version: ${{ matrix.python-version }}
      - name: Install the project
        run: uv sync --locked --all-extras --dev
      - name: Lint code with Ruff
        run: ruff check --output-format=github
      - name: Run tests and coverage
        shell: bash
        run: |
          tox run
          if [ -f "test-report.md" ]; then
            echo "### Test Report" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            cat "test-report.md" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          fi
          if [ -f "test-coverage.md" ]; then
            echo "### Code coverage" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            cat "test-coverage.md" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
          fi
  doc:
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.7.16"
          python-version: "3.13"
      - name: Install the project
        run: uv sync --locked --all-extras --dev
      - name: Generate documentation
        shell: bash
        run: |
          tox run -e docs
      - name: Upload documentation
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs/_build/html
      - name: Publish documentation on GitHub Pages
        uses: actions/deploy-pages@v4
        id: deployment
