[tox]
requires =
    tox>=4.2
    uv>=0.4.10
    tox-uv>=1.11.3
env_list =
    fix
    3.12
    3.13
isolated_build = True

[testenv]
description = run the unit tests with pytest under {base_python}
usedevelop = true
dependency_groups =
    test
allowlist_externals = bash
commands =
    coverage run -m pytest --doctest-modules --md-report --md-report-verbose=0 --md-report-output test-report.md
    bash -c "coverage report --format=markdown | tee test-coverage.md"

[testenv:fix]
description = format the code base to adhere to our styles, and complain about what we cannot do automatically
skip_install = true
dependency_groups =
    dev
    test
commands =
    ruff format
    pre-commit run --all-files

[testenv:type]
description = run type check on code base
dependency_groups =
    test
commands =
    mypy colander_data_converter

[testenv:docs]
description = generate documentation
dependency_groups =
    docs
commands =
    sphinx-build -M html ./docs docs/_build/
    sphinx-build -M linkcheck ./docs docs/_build/

[testenv:gencode]
description = generate code
dependency_groups =
    dev
    test
commands =
    python generate_types.py
    ruff format
    pre-commit run --all-files

[testenv:apidoc]
description = generate API documentation
dependency_groups =
    docs
commands =
    sphinx-apidoc -f --remove-old -e -o ./docs/source/ ./colander_data_converter/

[testenv:servedocs]
description = serve documentation
dependency_groups =
    docs
commands =
    sphinx-autobuild --watch colander_data_converter  docs/ docs/_build/html
